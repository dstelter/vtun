#
# Configuration file example for vtund.
#
# Maxim Krasnyansky <max_mk@yahoo.com>
# Cleanup of English and spelling by Ted Rolle <ted@acacia.datacomm.com>
#
# Lines which begin with '#' are comments
#
# File format:
#
# XXXXX {
#   option param; option param;
#   option param;
#   ......
# }  
# Where XXXXX:
#   options - vtund options.
#   default - default host options.
#   host    - host options.     
# 
# Options _must_ be grouped by curly braces '{' '}'.
# Each option _must_ end with ';' 
#
# Possible vtund options:
#   port - port number(server listens on that port, client connects
#       to that port.
#
#   persist - reconnect to the server after connection termination.
#       used only by client.
#
#   timeout - connect timeout for the client. 
#
#   ppp - program for the ppp initialization.
#
#   ifconfig - program for the network interface initialization.
#
#   route - program for the routing table manipulation. 
#
#   firewall - program for the firewall setup. 
#
#  
# Possible host options:
#    passwd -  Password for authentication.
#
#    type - Tunnel type.
#       'tun'   - IP tunnel (No PPP,Ether,.. headers).
#       'ether' - Ethernet tunnel.
#       'tty'   - Serial tunnel, PPP, SLIP, etc.
#       'pipe'  - Pipe tunnel.
#       Default type is 'tty'.
#       This option is ignored by the client.
#
#    device - Name of the net device.
#       'tapXX' - for 'ether'
#       'tunXX' - for 'tun'
#	By default VTun will automatically select available device.
#
#    proto - Protocol used to create the tunnel.
#       'tcp' - TCP protocol.
#       'udp' - UDP protocol.
#  
#       'tcp' is default for all tunnel types.
#	'udp' is recommended for 'ether' and 'tun' only. 
#	
#       This option is ignored by the client.
# 
#    compress - Enable 'yes' or disable 'no' compression. You also can 
#	specify	compression method 'zlib' or 'lzo' and level from 
#	1(best speed) to 9(best compression), separated by ':'. 
#	'yes' is equivalent to 'zlib:1'.  
#       Ignored by the client. 
#
#    encrypt - Enable 'yes' or disable 'no' BlowFish encryption.
#       Ignored by the client.
#
#    keepalive - Enable 'yes' or disable 'no' connection keep-alive.
#       Ignored by the client.
#
#    stat - Enable 'yes' or disable 'no' connection statistics.
#       If enabled vtund will log statistic counters every 5 minutes.
#
#    speed -  Speed of the connection in kilobits/second.
#       8,16,32,64,128,256,etc.
#       0 means maximum possible speed without shaping.
#       You can specify speed in form IN:OUT.
#       IN(to the client), OUT(from the client).
#       Single number means same speed for IN and OUT.
#       Ignored by the client.
#
#    up - List of programs to run after connection has been established.
#	Used to initialize protocols, devices, routing and firewall.
#    Format:	  
#       up {
#         option .....;
#         option .....;
#       };
#
#    down - List of programs to run after connection has been terminated. 
#	Used to reset protocols, devices, routing and firewall.
#    Format:	  
#       down {
#         option .....;
#         option .....;
#       };
#
#    Possible 'up' and 'down' options:
#
#    program - Run specified program.
#    Format:
#       program path arguments wait;
#
#       path - Full path to the program. Mandatory.
#       arguments - Arguments to pass to the program. Must be enclosed
# 	   in double quotes. TTY port name or Ethernet device is 
#	   substituted in place of %%(double percent sign).
#          You can use single quotes to group program arguments.
#	   Optional.
#       wait - Wait for the program termination. Optional.
#
#    ppp - Run program specified by 'ppp' statement in 
#	   'options' section.
#    Format:
#       ppp arguments;
#
#    ifconfig - Run program specified by 'ifconfig' statement in 
#	   'options' section.
#    Format:
#       ifconfig arguments;
#
#    route - Run program specified by 'route' statement in 
#	   'options' section.
#    Format:
#       route arguments;
#
#    firewall - Run program specified by 'firewall' statement in 
#	   'options' section.
#    Format:
#       firewall arguments;
#
# Note:
#   Options 'Ignored by the client' means that they are supplied by
#   the server at the run time.
#   Option names can be abbreviated to a minimum of 4 characters.

#
# ----- CUT HERE  --- Server config --- CUT HERE -----
#
options {
  port 5000;                    # Listen on this port.

# Path to various programs
  ppp 		/usr/sbin/pppd;            
  ifconfig 	/sbin/ifconfig;
  route 	/sbin/route;
  firewall 	/sbin/ipchains;
}

# Default host options 
default {
  compress      no;             # Compression is off by default
  speed         0;              # By default maximum speed, NO shaping
}

# PPP example.
# Allow connection to 'viper' with password 'TTT$bio' with compression
# and encryption. 
# After connection has been established:
#    start 'pppd', assign 11.0.0.1 IP address to our side, 11.0.0.2 to 
#    client and add proxy arp entry. 
viper {
  pass  TTT$bio;
  comp  yes; # compress zlib:1; 
  encr  yes;
  up {
	ppp "11.0.0.1:11.0.0.2 proxyarp";
  };
}

# Ethernet example.
# Allow connection for 'lion' with password 'Ma&^TU' with compression
# and encryption. 
# After connection has been established: 
#    run 'ifconfig' to configure tap device, assign 12.0.0.1 
#        IP address and netmask 255.255.255.0. 
#    run 'route' to add route to net 13.0.0.0/24  
#    run 'ipchains' to configure masquerading for net 13.0.0.0/24 
#
# After connection has been terminated: 
#    run 'ifconfig' to reset tap device. 
#    run 'ipchains' to delete previously added entry. 
lion {
  pass  Ma&^TU;
  type  ether;
  proto udp;   # Use UDP protocol
  comp  lzo:1;
  encr  yes;
  stat  yes;   # Log connection statistic 
  device tap0; # Use tap0 
  up {
	ifconfig "%% 12.0.0.1 netmask 255.255.255.0";
	route "add -net 13.0.0.0 netmask 255.255.255.0 gw 12.0.0.2";
	firewall "-A forward -s 13.0.0.0/24 -d 0.0.0.0/0 -j MASQ";
  };
  down {
	ifconfig "%% down";
	firewall "-D forward -s 13.0.0.0/24 -d 0.0.0.0/0 -j MASQ";
  };
  keepalive yes;
}

# TUN example.
# Allow connection for 'cobra' with password 'Ma&^TU' with compression
# and encryption. Allocate available tunXX device. 
# After connection has been established: 
#    run 'ifconfig' to configure tap device, assign 12.0.0.1 
#        as local IP address and 12.0.0.2 as remote. 
#    run 'route' to add route to net 13.0.0.0/24  
#    run 'ipchains' to configure masquerading for net 13.0.0.0/24 
cobra {
  pass  Ma&^TU;
  type  tun;
  proto udp;   # Use UDP protocol
  comp  lzo:1;
  encr  yes;
  up {
	ifconfig "%% 12.0.0.1 pointopoint 12.0.0.2";
	route "add -net 13.0.0.0 netmask 255.255.255.0 gw 12.0.0.2";
	firewall "-A forward -s 13.0.0.0/24 -d 0.0.0.0/0 -j MASQ";
  };
  down {
	# TUN driver will automatically down device on close
        # ifconfig "%% down";
	firewall "-D forward -s 13.0.0.0/24 -d 0.0.0.0/0 -j MASQ";
  };
  keepalive yes;
}

# Program pipe example.
# Allow connection for 'backup' with password 'OnlyME' with compression
# and encryption on speed 256K IN and 128K OUT.
# Start sh(shell) and tar '/etc' directory to the stdout(pipe tunnel). 
backup {
  passwd OnlyME;
  compress yes; encrypt yes;
  speed 256:128;
  type pipe;
  up {
     prog /bin/sh "-c 'tar cf - /etc/*'";
  };
}
# Another silly example to show that VTun can tunnel ALMOST
# anything :-).
# Allow connection for 'sz' with password 'OnlyME' with encryption.
# IN and OUT speed 64K. 
# Send '/etc/profile' via ZMODEM to the stdout(tty tunnel).
sz {
  pass  OnlyME;
  speed 64;
  type  tty;
  encr  yes;
  up {
    prog  /bin/sh "-c 'sz /etc/termcap'";
  };
}
#
# ----- CUT HERE  --- End of server config --- CUT HERE -----
#

#
# ----- CUT HERE  --- Client config --- CUT HERE -----
#
options {
  port 5000;                    # Connect to this port.
  persist no;
  timeout 60;

# Path to various programs
  ppp 	   /usr/sbin/pppd;            
  ifconfig /sbin/ifconfig;
  route    /sbin/route;
  firewall /sbin/ipchains;
}

# PPP example.
# Connect as host 'viper' with password 'TTT$bio'. 
# After connection has been established:
#    start 'pppd', IP address will be assigned by the server 
viper {
  pass  TTT$bio;
  up {
	ppp "noipdefault";
  };
}

# Ethernet example.
# Connect as host 'lion' with password 'Ma&^TU'. 
# After connection has been established: 
#    run 'ifconfig' to configure tap device, assign 12.0.0.2 
#        IP address and netmask 255.255.255.0. 
#
# After connection has been terminated: 
#    run 'ifconfig' to reset tap device. 
lion {
  pass  Ma&^TU ;
  type  ether;
  device tap1; # Use tap1 
  up {
	ifconfig "%% 12.0.0.2 netmask 255.255.255.0";
  };
  down {
	ifconfig "%% down";
  };
}

# TUN example.
# Connect as host 'cobra' with password 'Ma&^TU'. 
# After connection has been established: 
#    run 'ifconfig' to configure tap device, assign 12.0.0.2 
#        address as local IP address and 12.0.0.1 as remote. 
cobra {
  pass  Ma&^TU ;
  type  tun;
  device tun1; # Use tun1 
  up {
	ifconfig "%% 12.0.0.2 pointopoint 12.0.0.1";
  };
}

# Program pipe example.
# Connect as host 'backup' with password 'OnlyME'.
# Start sh(shell) and untar files from stdin(pipe tunnel). 
backup {
  passwd        OnlyME;
  compress      yes;    encrypt yes;
  up {
	prog /bin/sh "-c 'cd /tmp; tar xf -";
  };
}

# Another silly example to show that VTun can tunnel ALMOST
# anything :-).
# Connect as host 'sz' with password 'OnlyME'.
# Receive file via ZMODEM from the stdin(tty tunnel).
sz {
  pass  OnlyME;
  up {
	prog  /bin/sh "-c 'cd /tmp; rz'";
  };
}
