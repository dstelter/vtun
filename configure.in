dnl
dnl VTun - Virtual Tunnel over TCP/IP network.
dnl Copyright (C) 1998-2000  Maxim Krasnyansky <max_mk@yahoo.com>
dnl
dnl $Id: configure.in,v 1.1.1.2 2000/03/28 17:19:18 maxk Exp $
dnl
dnl Process this file with autoconf to produce a configure script.
dnl

AC_INIT(lib.c)
AC_CONFIG_HEADER(config.h)

dnl Encryption support
AC_ARG_WITH(ssl-headers,
   --with-ssl-headers=DIR  Crypto Include files location,
   SSL_HDR_DIR="$withval"
   CPPFLAGS="$CPPFLAGS -I$withval" 
)
AC_ARG_WITH(ssl-lib,
   --with-ssl-lib=DIR      Crypto Library location,
   LIBS="$LIBS -L$withval" 
)

dnl LZO support (optional)
AC_ARG_ENABLE(lzo,
   --enable-lzo     	   Compile LZO module,
   LZO=yes
)
AC_ARG_WITH(lzo-headers,
   --with-lzo-headers=DIR     LZO Include files location,
   LZO_HDR_DIR="$withval"
)
AC_ARG_WITH(lzo-lib,
   --with-lzo-lib=DIR         LZO Library location,
   LIBS="$LIBS -L$withval" 
)

dnl SOCKS support (optional)
AC_ARG_ENABLE(socks,
   --enable-socks     	   Compile with SOCKS support,
   SOCKS=yes
)
AC_ARG_WITH(socks-lib,
   --with-socks-lib=DIR         SOCKS Library location,
   LIBS="$LIBS -L$withval" 
)

dnl Guess host type.
AC_CANONICAL_HOST
AC_CANONICAL_SYSTEM

dnl Check for programs.
AC_PROG_YACC
AC_PROG_LEX
AC_PROG_CC
AC_PROG_INSTALL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl Check for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/resource.h netdb.h sched.h resolv.h arpa/inet.h)
AC_CHECK_HEADERS(netinet/ip.h netinet/in.h netinet/tcp.h netinet/in_systm.h)
AC_CHECK_HEADERS(libutil.h sys/sockio.h)

dnl Check for libsocket
AC_SEARCH_LIBS(socket, socket)

dnl Check for libnsl
AC_SEARCH_LIBS(inet_ntoa, nsl)

dnl Check for libresolv
AC_SEARCH_LIBS(gethostbyname, resolv nsl)

dnl Check for librt
AC_SEARCH_LIBS(nanosleep, rt posix4)

dnl Check for setproctitle in libutil
AC_SEARCH_LIBS(setproctitle, util bsd, AC_DEFINE(HAVE_SETPROC_TITLE) )

dnl Check for zlib.
AC_CHECK_LIB(z, deflate,
   LIBS="$LIBS -lz"
   AC_DEFINE(HAVE_ZLIB),
   AC_MSG_WARN( Zlib not found. ZLIB compression module won't be compiled. )
)

AC_MSG_RESULT()
AC_CHECKING( for SSL Library and Header files ... )
AC_SEARCH_HEADERS(md5.h blowfish.h,
   $SSL_HDR_DIR /usr/include/ssl /usr/include/openssl /usr/include,
   AC_CHECK_LIB(crypto, BF_set_key,,
	AC_MSG_ERROR(SSL library not found.)
   ),
   AC_MSG_ERROR(SSL headers not found.)
)

if test "$LZO" = "yes"; then
   AC_MSG_RESULT()
   AC_CHECKING( for LZO Library and Header files ... )
   AC_SEARCH_HEADERS(lzo1x.h, 
	$LZO_HDR_DIR /usr/include/lzo /usr/include,
        AC_CHECK_LIB(lzo, lzo1x_decompress,
	    [
	       LIBS="$LIBS -llzo"
	       AC_DEFINE(HAVE_LZO)
	    ],
	    AC_MSG_ERROR( LZO library not found. )
        ),
        AC_MSG_ERROR( LZO headers not found. )
   )
fi

if test "$SOCKS" = "yes"; then
   AC_MSG_RESULT()
   AC_CHECKING( for SOCKS Library ... )
   AC_CHECK_LIB(socks5, SOCKSconnect,
        [
	  CFLAGS="$CFLAGS -DVTUN_SOCKS=1"
	  LIBS="$LIBS -lsocks5"
	],
        AC_CHECK_LIB(socks, Rconnect,
	    [
	       CFLAGS="$CFLAGS -DVTUN_SOCKS=2"
	       LIBS="$LIBS -lsocks"
	    ],
	    AC_MSG_ERROR( SOCKS library not found. )
        )
   )
fi

AC_MSG_RESULT()

case $host_os in
	*solaris*)
	     OS_DIR="svr4"
	     ;;
	*)
	     OS_DIR="generic"
	     ;;
esac	     

AC_MSG_RESULT( creating driver and protocol links ... )

# Create links from OS dir
./config.drivers link $OS_DIR

# Create links from GENERIC dir
./config.drivers link generic

AC_OUTPUT(Makefile)
