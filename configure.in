dnl Process this file with autoconf to produce a configure script.
AC_INIT(main.c)
AM_INIT_AUTOMAKE(vtund, 3.0pre1)
AM_CONFIG_HEADER(config.h)
AC_CANONICAL_HOST
AC_SET_MAKE
AM_PROG_CC_C_O
dnl Process configure options.
AC_ARG_ENABLE(crypto,
[  --enable-crypto		Compile encryption support],
[ case "$enableval"
  in
    no) CRYPTO=no  ;;
    *)  CRYPTO=yes ;;
  esac
])
AC_ARG_ENABLE(lzo,
[  --enable-lzo			Compile lzo compression support],
[ case "$enableval"
  in
    no) LZO=no  ;;
    *)  LZO=yes ;;
  esac
])
AC_ARG_ENABLE(socks,
[  --enable-socks		Compile socks support],
[ case "$enableval"
  in
    no) SOCKS=no  ;;
    *)  SOCKS=yes ;;
  esac
])
AC_ARG_ENABLE(zlib,
[  --enable-zlib		Compile zlib support],
[ case "$enableval"
  in
    no) ZLIB=no  ;;
    *)  ZLIB=yes ;;
  esac
])

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AM_PROG_LEX
AC_PROG_YACC
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL

dnl Checks for libraries.
AC_SEARCH_LIBS(socket, socket)
AC_SEARCH_LIBS(inet_ntoa, nsl)
AC_SEARCH_LIBS(gethostbyname, resolv nsl)
AC_SEARCH_LIBS(nanosleep, rt posix4)
AC_SEARCH_LIBS(setproctitle, util bsd)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h strings.h sys/ioctl.h sys/time.h syslog.h unistd.h)
AC_CHECK_HEADERS(sys/resource.h netdb.h sched.h resolv.h arpa/inet.h)
AC_CHECK_HEADERS(netinet/ip.h netinet/in.h netinet/tcp.h netinet/in_systm.h)
AC_CHECK_HEADERS(libutil.h sys/sockio.h)


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday select socket strdup strerror strtol)

dnl Optional checks.
if test "X$CRYPTO" = "Xyes"
then AC_MSG_RESULT()
  AC_MSG_RESULT(___ crypto support ___)
  [ for hdir in /usr/include/openssl /usr/include/ssl /usr/local/include
    do if test -f $hdir/blowfish.h
      then CPPFLAGS="$CPPFLAGS -I$hdir"
      fi
    done ]
  AC_CHECK_HEADERS(md5.h blowfish.h rand.h,,
    AC_MSG_ERROR(crypto headers not found))
  AC_CHECK_LIB(crypto, BF_set_key, :,
    AC_MSG_ERROR(crypto library not found))
  AC_DEFINE(HAVE_SSL)
fi

if test "X$ZLIB" = "Xyes"
then AC_MSG_RESULT([])
  AC_MSG_RESULT([___ lzo support ___])
  [ for hdr in /usr/include/lzo /usr/local/include
    do if test -f $hdr/lzo1x.h
      then CPPFLAGS="$CPPFLAGS -I$hdr"
      fi
    done ]
  AC_CHECK_HEADERS(zlib.h,,
    AC_MSG_ERROR(zlib headers not found))
  AC_CHECK_LIB(zlib, deflate, :,
    AC_MSG_ERROR(zlib library not found))
  AC_DEFINE(HAVE_ZLIB)
fi

if test "X$LZO" = "Xyes"
then AC_MSG_RESULT([])
  AC_MSG_RESULT([___ lzo support ___])
  [ for hdr in /usr/include/lzo /usr/local/include
    do if test -f $hdr/lzo1x.h
      then CPPFLAGS="$CPPFLAGS -I$hdr"
      fi
    done ]
  AC_CHECK_HEADERS(lzo1x.h,,
    AC_MSG_ERROR(lzo headers not found))
  AC_CHECK_LIB(lzo, lzo1x_decompress, :,
    AC_MSG_ERROR(lzo library not found))
  AC_DEFINE(HAVE_LZO)
  LINKLZO="-llzo"
fi
if test "X$SOCKS" = "Xyes"
then AC_MSG_RESULT([])
  AC_MSG_RESULT([___ socks support ___])
  AC_CHECK_LIB(socks5, SOCKSconnect,
    [ CFLAGS="$CFLAGS -DVTUN_SOCKS=1" ; LIBS="$LIBS -lsocks5" ],
    AC_CHECK_LIB(socks, Rconnect,
      [ CFLAGS="$CFLAGS -DVTUN_SOCKS=2" ; LIBS="$LIBS -lsocks" ],
      AC_MSG_ERROR(SOCKS library not found.)))
fi
echo ""
OS_REL=`uname -r | tr -d '[A-Za-z\-\_\.]'`
case $host_os in
	*linux*)
	     OS_DIR="linux"
	     AC_CHECK_HEADERS(linux/if_tun.h)
	     ;;
	*solaris*)
	     OS_DIR="svr4"
	     ;;
	*freebsd*)
	     if test "$OS_REL" -ge "40"; then 
	        OS_DIR="freebsd"
	     fi
	     ;;
	*openbsd*)
	     if test "$OS_REL" -ge "25"; then 
	        OS_DIR="openbsd"
	     fi
	     ;;
esac	     
for i in $(echo generic/*.c)
do FOO=${i##*/}
   if test -f $OS_DIR/$FOO; then
	HOST_SRCS="$HOST_SRCS $OS_DIR/$FOO"
   else	
	HOST_SRCS="$HOST_SRCS $i"
   fi
done

AC_SUBST(HOST_SRCS, ${HOST_SRCS})
AC_DEFINE_UNQUOTED(VTUN_VER, "$VERSION `date '+%m/%d/%Y'`")
AC_OUTPUT(Makefile) 
